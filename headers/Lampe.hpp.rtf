{\rtf1\ansi\deff0\deftab480

{\fonttbl
{\f000 Courier New;}
{\f001 Courier New;}
{\f002 Courier New;}
{\f003 Courier New;}
{\f004 Courier New;}
{\f005 Courier New;}
{\f006 Courier New;}
{\f007 Courier New;}
}

{\colortbl
\red000\green000\blue000;
\red255\green255\blue255;
\red000\green128\blue000;
\red255\green255\blue255;
\red255\green128\blue000;
\red255\green255\blue255;
\red128\green064\blue000;
\red255\green255\blue255;
\red000\green000\blue128;
\red255\green255\blue255;
\red000\green000\blue000;
\red255\green255\blue255;
\red128\green000\blue255;
\red255\green255\blue255;
\red000\green000\blue000;
\red255\green255\blue255;
}

\f0\fs20\cb15\cf14 \highlight7\cf6 #ifndef LAMPE_H\par
#define LAMPE_H\par
#include <vector>\par
#include "../headers/Motor.hpp"\par
#include <iostream>\par
#include <string>\par
\highlight1\cf0 \par
\highlight13\cf12 class\highlight1\cf0  \highlight11\cf10 Lampe\highlight1\cf0 \par
\highlight9\cf8\b \{\highlight1\cf0\b0 \par
    \highlight13\cf12 public\highlight9\cf8\b :\highlight1\cf0\b0 \par
        \highlight11\cf10 Lampe\highlight9\cf8\b ();\highlight1\cf0\b0 \par
        \highlight13\cf12 void\highlight1\cf0  \highlight11\cf10 addMotor\highlight9\cf8\b ();\highlight1\cf0\b0 \par
        \highlight13\cf12 void\highlight1\cf0  \highlight11\cf10 parseJson\highlight9\cf8\b (\highlight11\cf10\b0 std\highlight9\cf8\b ::\highlight11\cf10\b0 string\highlight9\cf8\b );\highlight1\cf0\b0 \par
        \highlight9\cf8\b ~\highlight11\cf10\b0 Lampe\highlight9\cf8\b ();\highlight1\cf0\b0 \par
\par
        \highlight3\cf2 //ParseJson function\par
\highlight1\cf0         \highlight13\cf12 static\highlight1\cf0  \highlight13\cf12 void\highlight1\cf0  \highlight11\cf10 find_onechar_and_remove\highlight9\cf8\b (\highlight11\cf10\b0 std\highlight9\cf8\b ::\highlight11\cf10\b0 string\highlight9\cf8\b &,\highlight13\cf12\b0 char\highlight9\cf8\b );\highlight1\cf0\b0 \par
        \highlight13\cf12 static\highlight1\cf0  \highlight13\cf12 void\highlight1\cf0  \highlight11\cf10 find_allchar_and_remove\highlight9\cf8\b (\highlight11\cf10\b0 std\highlight9\cf8\b ::\highlight11\cf10\b0 string\highlight9\cf8\b &,\highlight13\cf12\b0 char\highlight9\cf8\b );\highlight1\cf0\b0 \par
        \highlight13\cf12 static\highlight1\cf0  \highlight11\cf10 std\highlight9\cf8\b ::\highlight11\cf10\b0 string\highlight1\cf0  \highlight11\cf10 until_find_charac\highlight9\cf8\b (\highlight11\cf10\b0 std\highlight9\cf8\b ::\highlight11\cf10\b0 string\highlight9\cf8\b &,\highlight13\cf12\b0 char\highlight9\cf8\b ,\highlight13\cf12\b0 bool\highlight9\cf8\b );\highlight1\cf0\b0 \par
        \highlight13\cf12 static\highlight1\cf0  \highlight13\cf12 void\highlight1\cf0  \highlight11\cf10 find_acc\highlight9\cf8\b (\highlight13\cf12\b0 int\highlight9\cf8\b &,\highlight13\cf12\b0 char\highlight9\cf8\b &,\highlight11\cf10\b0 std\highlight9\cf8\b ::\highlight11\cf10\b0 string\highlight9\cf8\b );\highlight1\cf0\b0 \par
        \highlight13\cf12 static\highlight1\cf0  \highlight13\cf12 bool\highlight1\cf0  \highlight11\cf10 find_vector\highlight9\cf8\b (\highlight11\cf10\b0 std\highlight9\cf8\b ::\highlight11\cf10\b0 vector\highlight1\cf0  \highlight9\cf8\b <\highlight11\cf10\b0 Motor\highlight9\cf8\b >,\highlight1\cf0\b0  \highlight11\cf10 std\highlight9\cf8\b ::\highlight11\cf10\b0 string\highlight9\cf8\b ,\highlight1\cf0\b0  \highlight13\cf12 int\highlight9\cf8\b &\highlight1\cf0\b0  \highlight11\cf10 i\highlight9\cf8\b );\highlight1\cf0\b0 \par
        \highlight13\cf12 static\highlight1\cf0  \highlight13\cf12 void\highlight1\cf0  \highlight11\cf10 maj\highlight9\cf8\b (\highlight11\cf10\b0 std\highlight9\cf8\b ::\highlight11\cf10\b0 vector\highlight1\cf0  \highlight9\cf8\b <\highlight11\cf10\b0 Motor\highlight9\cf8\b >&,\highlight1\cf0\b0  \highlight13\cf12 int\highlight1\cf0  \highlight11\cf10 i\highlight9\cf8\b ,\highlight11\cf10\b0 Moteur_t\highlight9\cf8\b ,\highlight11\cf10\b0 Direct_t\highlight9\cf8\b ,\highlight13\cf12\b0 int\highlight9\cf8\b ,\highlight13\cf12\b0 float\highlight9\cf8\b );\highlight1\cf0\b0 \par
        \highlight13\cf12 static\highlight1\cf0  \highlight13\cf12 void\highlight1\cf0  \highlight11\cf10 getvalue\highlight9\cf8\b (\highlight11\cf10\b0 std\highlight9\cf8\b ::\highlight11\cf10\b0 string\highlight1\cf0  \highlight9\cf8\b ,\highlight11\cf10\b0 Moteur_t\highlight9\cf8\b &,\highlight1\cf0\b0  \highlight11\cf10 Direct_t\highlight9\cf8\b &,\highlight1\cf0\b0  \highlight13\cf12 int\highlight9\cf8\b &,\highlight1\cf0\b0  \highlight13\cf12 float\highlight9\cf8\b &);\highlight1\cf0\b0 \par
\par
        \highlight3\cf2 //get/set\par
\highlight1\cf0         \highlight11\cf10 std\highlight9\cf8\b ::\highlight11\cf10\b0 vector\highlight1\cf0  \highlight9\cf8\b <\highlight11\cf10\b0 Motor\highlight9\cf8\b >\highlight1\cf0\b0  \highlight11\cf10 gettabMoteur\highlight9\cf8\b ();\highlight1\cf0\b0 \par
        \highlight11\cf10 std\highlight9\cf8\b ::\highlight11\cf10\b0 vector\highlight1\cf0  \highlight9\cf8\b <\highlight11\cf10\b0 std\highlight9\cf8\b ::\highlight11\cf10\b0 string\highlight9\cf8\b >\highlight1\cf0\b0  \highlight11\cf10 gettabclass\highlight9\cf8\b ();\highlight1\cf0\b0 \par
        \highlight11\cf10 std\highlight9\cf8\b ::\highlight11\cf10\b0 string\highlight1\cf0  \highlight11\cf10 getfeedBack\highlight9\cf8\b ();\highlight1\cf0\b0 \par
        \highlight13\cf12 int\highlight1\cf0  \highlight11\cf10 getqMotors\highlight9\cf8\b ();\highlight1\cf0\b0 \par
        \highlight13\cf12 void\highlight1\cf0  \highlight11\cf10 settabMoteur\highlight9\cf8\b (\highlight11\cf10\b0 std\highlight9\cf8\b ::\highlight11\cf10\b0 vector\highlight1\cf0  \highlight9\cf8\b <\highlight11\cf10\b0 Motor\highlight9\cf8\b >);\highlight1\cf0\b0 \par
        \highlight13\cf12 void\highlight1\cf0  \highlight11\cf10 settabclass\highlight9\cf8\b (\highlight11\cf10\b0 std\highlight9\cf8\b ::\highlight11\cf10\b0 vector\highlight1\cf0  \highlight9\cf8\b <\highlight11\cf10\b0 std\highlight9\cf8\b ::\highlight11\cf10\b0 string\highlight9\cf8\b >);\highlight1\cf0\b0 \par
        \highlight13\cf12 void\highlight1\cf0  \highlight11\cf10 setfeedback\highlight9\cf8\b (\highlight11\cf10\b0 std\highlight9\cf8\b ::\highlight11\cf10\b0 string\highlight9\cf8\b );\highlight1\cf0\b0 \par
        \highlight13\cf12 void\highlight1\cf0  \highlight11\cf10 setqMOtors\highlight9\cf8\b (\highlight13\cf12\b0 int\highlight9\cf8\b );\highlight1\cf0\b0 \par
\par
    \highlight13\cf12 private\highlight9\cf8\b :\highlight1\cf0\b0 \par
        \highlight11\cf10 std\highlight9\cf8\b ::\highlight11\cf10\b0 vector\highlight1\cf0  \highlight9\cf8\b <\highlight11\cf10\b0 Motor\highlight9\cf8\b >\highlight1\cf0\b0  \highlight11\cf10 tabMoteur\highlight9\cf8\b ;\highlight1\cf0\b0 \par
        \highlight11\cf10 std\highlight9\cf8\b ::\highlight11\cf10\b0 vector\highlight1\cf0  \highlight9\cf8\b <\highlight11\cf10\b0 std\highlight9\cf8\b ::\highlight11\cf10\b0 string\highlight9\cf8\b >\highlight1\cf0\b0  \highlight11\cf10 tabclass\highlight9\cf8\b ;\highlight1\cf0\b0 \par
        \highlight13\cf12 int\highlight1\cf0  \highlight11\cf10 qMotors\highlight9\cf8\b =\highlight5\cf4\b0 0\highlight9\cf8\b ;\highlight1\cf0\b0 \par
        \highlight11\cf10 std\highlight9\cf8\b ::\highlight11\cf10\b0 string\highlight1\cf0  \highlight11\cf10 feedBack\highlight9\cf8\b ;\highlight1\cf0\b0 \par
\highlight9\cf8\b \};\highlight1\cf0\b0 \par
\par
\highlight7\cf6 #endif \highlight3\cf2 // LAMPE_H\par
}
